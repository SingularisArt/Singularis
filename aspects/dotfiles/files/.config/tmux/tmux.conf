#  __  __         _____                       ____             __
# |  \/  |_   _  |_   _| __ ___  _   ___  __ / ___|___  _ __  / _|
# | |\/| | | | |   | || '_ ` _ \| | | \ \/ /| |   / _ \| '_ \| |_
# | |  | | |_| |   | || | | | | | |_| |>  < | |__| (_) | | | |  _|
# |_|  |_|\__, |   |_||_| |_| |_|\__,_/_/\_(_)____\___/|_| |_|_|
#         |___/

#######################################################################
#                                                                     #
#                               Options                               #
#                                                                     #
#######################################################################

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -g mode-keys vi
set -g mouse on
set -g escape-time 0
set -g focus-events on
set -g history-limit 1000000
set -g base-index 1
set -g pane-base-index 1
set -g -w automatic-rename on
set -g renumber-windows on
set -g bell-action none
set -g status-keys vi
set-window-option -g automatic-rename
set-option -g set-titles-string "#S > #T"

#######################################################################
#                                                                     #
#                              Bindings                               #
#                                                                     #
#######################################################################

bind-key | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Default to incremental search in copy-mode
bind-key  -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key  -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""
bind-key / copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane\; send-keys -t'{mouse}' -X clear-selection\; send-keys -t'{mouse}' -X -N 3 scroll-down

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Don't exit copy mode on double or triple click.
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Re-source tmux.conf file
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "Re-loaded tmux.conf"

# Break current pane into its own window
bind-key C-b break-pane -d

# Create a new tmux session without leaving the current one
bind-key b  new-session
# Create a new tmux session by asking the user for the name without leaving the current one
bind-key B command-prompt -p "Name of new session: " "new -s '%%'"

# Create a new window by asking the user for the name
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# Kill the current session and enter a new session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key S display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

#######################################################################
#                                                                     #
#                              Statusbar                              #
#                                                                     #
#######################################################################

set-option -g status-style 'bg=#373b41,fg=white,bold,italics'
set-option -g status-left-length 40
set-option -g status-left '#[fg=yellow,bold,italics]#S ยง ' # SECTION SIGN (UTF-8: c2 a7)
set-option -g status-right "#{prefix_highlight} #[fg=yellow,bold,italics]$USER@#h #[fg=magenta]%l:%M %p"
set-option -g status-interval 60 # Default is 15.

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set-option -g renumber-windows on

# Highlight active window.
set-option -w -g window-status-current-style bg=red

#######################################################################
#                                                                     #
#                               Plugins                               #
#                                                                     #
#######################################################################

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'

# copycat saved searches
# rails request
set -g @copycat_search_C-e '^Processing[[:space:]]by[[:space:]][^[:space:]]*'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-urlview'

set -g @prefix_highlight_bg 'red'

# install tpm if not already installed
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm'"

run -b '~/.config/tmux/plugins/tpm/tpm'
