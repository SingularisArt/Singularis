#  __  __         _____                       ____             __
# |  \/  |_   _  |_   _| __ ___  _   ___  __ / ___|___  _ __  / _|
# | |\/| | | | |   | || '_ ` _ \| | | \ \/ /| |   / _ \| '_ \| |_
# | |  | | |_| |   | || | | | | | |_| |>  < | |__| (_) | | | |  _|
# |_|  |_|\__, |   |_||_| |_| |_|\__,_/_/\_(_)____\___/|_| |_|_|
#         |___/

#######################################################################
#                                                                     #
#                               Options                               #
#                                                                     #
#######################################################################

# Set prefix to Ctrl+Space.
unbind-key C-b
set-option -g prefix C-Space

background=#181c27
bg='#303030'
prefix="#{?client_prefix,🐠,}"

set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',xterm-256color:Tc'
set -g mode-keys vi
set -g mouse on
set -g escape-time 0
set -g focus-events on
set -g history-limit 1000000
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g bell-action none
set -g status-keys vi
set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'
set -g visual-activity off
set -g repeat-time 400
set -g -w automatic-rename on
set -g -w monitor-activity on

set-window-option -g automatic-rename
set-option -g set-titles-string '#S > #T'

set -g message-style fg='colour222',bg='colour238'
set -g message-command-style fg='colour222',bg='colour238'

set-option -g status-style fg=colour15,bg=$background
set-option -g pane-border-style fg=green,bg=$background
set-option -g pane-active-border-style fg=yellow,bg=$background
set-option -g window-status-activity-style fg=colour111


#######################################################################
#                                                                     #
#                              Bindings                               #
#                                                                     #
#######################################################################

# Unbind crappy keybindings.
unbind-key c
unbind-key %
unbind-key '"'

# Open new/split panes with the path of the current pane.
bind-key c new-window -c '#{pane_current_path}'
bind-key % split-window -h -c '#{pane_current_path}'
bind-key '"' split-window -v -c '#{pane_current_path}'

# Intuitive window-splitting keys.
bind-key | split-window -h -c '#{pane_current_path}'
bind-key '\' split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

# Re-source tmux.conf file.
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message 'Re-loaded tmux.conf'

# Default to incremental search in copy-mode
bind-key -T copy-mode-vi / command-prompt -i -p 'search down' 'send -X search-forward-incremental "%%%"'
bind-key -T copy-mode-vi ? command-prompt -i -p 'search up' 'send -X search-backward-incremental "%%%"'
bind-key / copy-mode\; command-prompt -i -p 'search up' 'send -X search-backward-incremental "%%%"'

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' 'send-keys -M' "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' 'send-keys -M' "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Don't exit copy mode on double or triple click.
bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' 'send-keys -M' "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' 'send-keys -M' "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Make visual selection easierhen
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Toggle between line select and block select.
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Cheat Sheet
bind-key -r i run-shell 'tmux new-window -c "#{pane_current_path}" "tmux rename-window \"Cheat Sheet\"; ~/.local/bin/tmux/tmux-cht"'

# Create commonly used tmux sessions.
bind-key -r C-t run-shell '~/.local/bin/tmux/tmux-sessionizer'

# Break current pane into its own window.
bind-key m break-pane -d
# Break current pane into its own session.
set -g @sessionist-promote-pane 'M'
# Break current window into its own session.
set -g @sessionist-promote-window 'W'
# Kill the current session and enter a new session.
set -g @sessionist-kill-session 'K'
# Join panes together.
set -g @sessionist-join-pane 't'
# Create a new tmux session by asking the user for the name without leaving the current one.
set -g @sessionist-new 'B'
# Create a new tmux session without leaving the current one.
bind-key b new-session
# Kill the current window.
bind-key E run-shell 'tmux kill-window'
# Kill the current pane.
bind-key e run-shell 'tmux kill-pane'
# Toggle popup window with Alt-k
bind-key -N 'Toggle popup window' C-p if-shell -F '#{==:#{session_name},popup}' {
  detach-client
} {
  display-popup -d "#{pane_current_path}" -x C -y C -w 80% -h 75% -E 'tmux attach-session -t popup || tmux new-session -s popup'
}

# Show all bindings.
bind-key C-h display-menu -x C -y C \
  "Kill Session"                       K "kill-session -t '#{session_name}'" \
  "Kill Current Window"                E "run-shell 'tmux kill-window'" \
  "Kill Current Pane"                  e "run-shell 'tmux kill-pane'" \
  "Kill Session and Enter New Session" K "run-shell 'tmux kill-session -t #{session_name} && tmux new-session'" \
  "" \
  "Close Menu"                         q "" \
  "Re-source tmux.conf"                r "source-file ~/.config/tmux/tmux.conf \; display-message 'Re-loaded tmux.conf'" \
  "Join Panes"                         J "join-pane -s '#{pane_id}'" \
  "Open Cheat Sheet"                   i "run-shell 'tmux new-window -c \"#{pane_current_path}\" \"tmux rename-window \"Cheat Sheet\"; ~/.local/bin/tmux/tmux-cht\"'" \
  "" \
  "Break Pane to Window"               B "break-pane -d" \
  "Break Pane to Session"              P "run-shell 'tmux break-pane -d -t #{pane_id}'" \
  "Break Pane to Window"               m "break-pane -d" \
  "Break Pane to Session"              M "break-pane -d" \
  "Break Window to Session"            W "break-pane -d" \
  "" \
  "Create Commonly Used Session"       C-t "run-shell '~/.local/bin/tmux/tmux-sessionizer'" \
  "" \
  "Join Panes Together"                t "join-pane -s '#{pane_id}'" \
  "Create New Session (Prompt)"        B "new-session" \
  "Toggle Popup Window"                C-p "if-shell -F '#{==:#{session_name},popup}' { detach-client } { display-popup -d \"#{pane_current_path}\" -x C -y C -w 80% -h 75% -E 'tmux attach-session -t popup || tmux new-session -s popup' }"

# Swap panes.
bind-key H select-pane -L
bind-key J select-pane -D
bind-key K select-pane -U
bind-key L select-pane -R

# Fast toggle between current and last-used window (normally prefix-l).
bind-key ^space last-window

# Shift+Arrow keys resize by 2.
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 2
bind -n S-Up resize-pane -U 2

# Ctrl+Arrow keys resize by 10.
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 10
bind -n C-Up resize-pane -U 10


#######################################################################
#                                                                     #
#                              Statusbar                              #
#                                                                     #
#######################################################################

set -g status-interval 2
set-option -g status-fg default

set -g status on
set -g status-justify left
set -g status-position top

set -g status-left-length 80
set -g status-right-length 80

set-option -g status-left ""

inactive='#222829'
grey='#74787a'
yellow='#f2c867'
teal='#37ad88'
green='#aacf61'

set-window-option -g window-status-separator ''

set -g status-right "$prefix #[fg=$bg]#[bg=$bg,fg=$teal]   #[fg=blue,bg=$bg]#S #[fg=$bg,bg=$background]"

set-option -g window-status-format "#[fg=$bg]#[bg=$bg,fg=cyan]󱫪 #[fg=$grey,bg=$bg]#W #[fg=$bg,bg=$background]"
set-option -g window-status-current-format "#[fg=$bg]#[fg=$yellow,bg=$bg] #[fg=$green,bg=$bg]#W #[fg=$bg,bg=$background]"


#######################################################################
#                                                                     #
#                               Plugins                               #
#                                                                     #
#######################################################################

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @continuum-save-interval '15'

set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

if 'test ! -d ~/.config/tmux/plugins/tpm' \
  'run "git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm"'

run -b '~/.config/tmux/plugins/tpm/tpm'
