local M = {}

M.servers = {
  emmet_ls = { require("plugins.lsp.settings.emmet_ls"), install = true },
  jsonls = require("plugins.lsp.settings.jsonls"),
  pyright = require("plugins.lsp.settings.pyright"),
  rust_analyzer = require("plugins.lsp.settings.rust_analyzer"),
  solang = require("plugins.lsp.settings.solang"),
  solc = require("plugins.lsp.settings.solc"),
  -- lua_ls = require("plugins.lsp.settings.lua_ls"),
  cssmodules_ls = { filetypes = { "css" }, install = true },
  dartls = {},
  solargraph = {},
  ltex = { require("plugins.lsp.settings.ltex") },
  tsserver = require("plugins.lsp.settings.tsserver"),
  yamlls = require("plugins.lsp.settings.yamlls"),
  sqlls = require("plugins.lsp.settings.sqlls"),
  cssls = { install = true },
  html = require("plugins.lsp.settings.html"),
  texlab = require("plugins.lsp.settings.texlab"),
  bashls = { install = true },
  clangd = require("plugins.lsp.settings.clangd"),
  tailwindcss = { install = true },
  golangci_lint_ls = { install = true },
  gopls = { require("plugins.lsp.settings.gopls"), install = true },
  jdtls = { install = true },
  solidity_ls = { install = true, install_server_name = "solidity" },
  r_language_server = { install = false },
  lemminx = { install = true },
  marksman = { install = true },
}

M.formatters = {
  "black",
  "clang-format",
  "golines",
  "google-java-format",
  "prettier",
  "rustfmt",
  "shellharden",
  "sql-formatter",
  "standardrb",
  "stylua",
  "xmlformatter",
  "yamlfix",
  "yamlfmt",
  "gomodifytags",
  "gofumpt",
  "goimports",
  "impl",
  "iferr",
  "gotestsum",
  "gotests",
}

M.linters = {
  "cpplint",
  "cspell",
  "flake8",
  "golangci-lint",
  "misspell",
  "write-good",
  "proselint",
  "shellcheck",
  "shellharden",
  "solhint",
  "sqlfluff",
  "standardrb",
  "yamllint",
  "ltex-ls",
  "delve",
  "ruff",
}

M.dap = {
  "chrome-debug-adapter",
  "node-debug2-adapter",
  "php-debug-adapter",
  "js-debug-adapter",
  "go-debug-adapter",
  "dart-debug-adapter",
  "cpptools",
  "bash-debug-adapter",
  "codelldb",
  "debugpy",
  "java-debug-adapter",
  "java-test",
}

return M
