global !p

from builtin import choose_next
from latex_.scopes import display_math, math

opening = ["(", "[", "{"]
closing = [")", "]", "}"]
vert = ["\\vert", "\\Vert"]

endglobal

#######################################################################
#                                                                     #
#                             Parenthesis                             #
#                                                                     #
#######################################################################

# () -> \left(\right)
context "display_math()"
snippet "\(\)" "Parenthesis" r
\left($1\right)
endsnippet

# {} -> \left{\right}
context "display_math()"
snippet "{}" "Curly Brackets" r
\left\{$1\right\}
endsnippet

# [] -> \left[\right]
context "display_math()"
snippet "\[\]" "Square Brackets" r
\left\[$1\right\]
endsnippet

# \left(x\right) -> \left[x\right]
# \left[x\right] -> \left{x\right}
# \left{x\right} -> \left(x\right)
context "math()"
snippet "\\left(\(|\[|\{)(.+)?\\right(\)|\]|\})" "Cycle Parenthesis" r
`!p
next_open = choose_next(match.group(1), opening, 3)
next_close = choose_next(match.group(3), closing, 3)
content = "" if match.group(2) is None else match.group(2)
snip.rv = "\\left" + next_open + content + "\\right" + next_close
`
endsnippet

# | -> \vert  \vert
context "math()"
snippet | "One Verticals"
\vert $1 \vert
endsnippet

# | -> \Vert  \Vert
context "math()"
snippet | "Two Verticals"
\Vert $1 \Vert
endsnippet

context "math()"
snippet "(\\vert|\\Vert)(.+)?(\\vert|\\Vert)" "Cycle Parenthesis" r
`!p
next_vert = choose_next(match.group(1), vert, 2)
content = "" if match.group(2) is None else match.group(2)
snip.rv = next_vert + content + next_vert
`
endsnippet
