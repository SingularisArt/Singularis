#!/usr/bin/env bash

BOLD='\033[0;1m'
GREEN='\033[1;32m'
PURPLE='\033[1;35m'
RED='\033[1;31m'
RESET='\033[0m'
YELLOW='\033[1;33m'

LOG_LEVEL_EMERGENCY=10
LOG_LEVEL_ALERT=10
LOG_LEVEL_CRITICAL=10
LOG_LEVEL_ERROR=10
LOG_LEVEL_WARNING=10
LOG_LEVEL_NOTICE=10
LOG_LEVEL_INFO=10
LOG_LEVEL_DEBUG=10

LOG_LEVEL=$LOG_LEVEL_INFO

log_debug() {
  if [[ $LOG_LEVEL -ge $LOG_LEVEL_DEBUG ]]; then
    echo -e "${PURPLE}[debug]  ${RESET} $*" > /dev/stderr
  fi
}

log_error() {
  if [[ $LOG_LEVEL -ge $LOG_LEVEL_ERROR ]]; then
    echo -e "${RED}[error]  ${RESET} $*" > /dev/stderr
  fi
}

log_info() {
  if [[ $LOG_LEVEL -ge $LOG_LEVEL_INFO ]]; then
    echo -e "${BOLD}[info]   ${RESET} $*" > /dev/stderr
  fi
}

log_notice() {
  if [[ $LOG_LEVEL -ge $LOG_LEVEL_NOTICE ]]; then
    echo -e "${GREEN}[notice] ${RESET} $*" > /dev/stderr
  fi
}

log_warn() {
  if [[ $LOG_LEVEL -ge $LOG_LEVEL_WARNING ]]; then
    echo -e "${YELLOW}[warning]${RESET} $*" > /dev/stderr
  fi
}

install_yay() {
  check_if_installed "git"

  cd /opt

  sudo git clone https://aur.archlinux.org/yay-git.git
  sudo chown -R $USER:$USER ./yay-git

  cd yay-git

  makepkg -si || sudo pacman -Sy base-devel && makepkg -si
}

check_if_installed() {
  if [[ ! -e "/usr/bin/${1}" ]]; then
    log_error "You don't have [${1}] installed!"
    read -p 'Do you want to install it [y/n]: ' install

    case ${install} in
      "yes")
        if [[ $1 -eq "yay" ]]; then
          install_yay
        else
          sudo pacman -S ${1}
        fi;;
      "no")
        exit;;
    esac
  else
    return
  fi
}

all() {
  source ${INSTALL_SCRIPTS}/all.sh
}

commands() {
  source ${INSTALL_SCRIPTS}/commands.sh
}

describe() {
  if [[ ${2} == "" ]]; then
    log_error "--describe takes one argument. Use ./install --aspects to see what you can use."
    exit 1
  fi

  for arg in ${@} ; do
    source ${INSTALL_SCRIPTS}/describe.sh ${arg}
  done
}

source_file() {
  if [[ -e "${INSTALL_SCRIPTS}/${1}" ]]; then
    source ${INSTALL_SCRIPTS}/${1}
  fi
}

bring_back_backup() {
  source ${INSTALL_SCRIPTS}/backup.sh ${@}
}

####################
# ASPECT FUNCTIONS #
####################

install_specific_aspects() {
  if [[ ${1} == 'backup' ]]; then
    ./aspects/script
    exit
  fi
  for arg in $@ ; do
    for aspect in `ls ${ASPECTS}` ; do
      if [[ ${arg} == ${aspect} ]]; then
        if [[ -f ${ASPECTS}/${aspect}/script ]]; then
          if [[ -x ${ASPECTS}/${aspect}/script ]]; then
            ${ASPECTS}/${aspect}/script
          fi
        fi
      fi
    done
  done
}

view_all_aspects() {
  for aspect in `ls ${ASPECTS}` ; do
    if [[ -f ${ASPECTS}/${aspect}/script ]]; then
      if [[ -x ${ASPECTS}/${aspect}/script ]]; then
          ${ASPECTS}/${aspect}/script
      fi
    fi
  done
}

install_all_aspects() {
  source ${INSTALL_SCRIPTS}/aspects.sh
}

not_aspect() {
  for arg in $@ ; do
    for aspect in `ls ${ASPECTS}` ; do
      if [[ -f ${ASPECTS}/${aspect}/script ]]; then
        if [[ -x ${ASPECTS}/${aspect}/script ]]; then
            ${ASPECTS}/${aspect}/script
        fi
      fi
    done
  done
}

